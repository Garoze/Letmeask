{"version":3,"sources":["assets/images/logo.svg","assets/images/google-icon.svg","assets/images/illustration.svg","components/Button/index.tsx","services/Firebase/index.ts","contexts/AuthContext/index.tsx","hooks/useAuth/index.ts","pages/Home/index.tsx","components/Question/index.tsx","assets/images/copy.svg","components/RoomCode/index.tsx","hooks/useRoom/index.ts","pages/Room/index.tsx","assets/images/delete.svg","assets/images/check.svg","assets/images/answer.svg","pages/AdminRoom/index.tsx","pages/CreateRoom/index.tsx","App/index.tsx","index.tsx"],"names":["Button","isOutlined","props","type","className","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Auth","auth","Database","database","AuthContext","createContext","AuthContextProvider","children","useState","user","setUser","useEffect","unsubscribe","onAuthStateChanged","authUser","displayName","photoURL","uid","Error","id","name","avatar","signInWithGoogle","a","provider","GoogleAuthProvider","signInWithPopup","result","Provider","value","useAuth","useContext","Home","history","useHistory","roomCode","setRoomCode","handleCreateRoom","push","handleJoinRoom","event","preventDefault","trim","ref","get","roomRef","exists","alert","val","endedAt","src","illustrationImg","alt","logoImg","onClick","googleIconImg","onSubmit","placeholder","onChange","e","target","Question","content","author","isAnswered","isHighlighted","cx","answered","highlighted","RoomCode","code","navigator","clipboard","writeText","copyImg","useRoom","roomId","title","setTitle","usersQuestions","setUsersQuestion","on","room","parsedQuestions","Object","entries","questions","map","key","likeCount","values","likes","length","likeId","find","authorId","off","Room","sendQuestion","setSendQuestion","params","useParams","handleSendQuestion","question","handleLikeQuestion","questionId","remove","to","disabled","aria-label","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","AdminRoom","handleEndRoom","window","confirm","update","Date","handleDeleteQuestion","handleCheckQuestionAsAnswered","handleHighlightQuestion","checkImg","answerImg","deleteImg","CreateRoom","createRoom","setCreateRoom","firebaseRoom","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"6VAAe,MAA0B,iCCA1B,MAA0B,wCCA1B,MAA0B,yC,+BCQ5BA,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,WAAeC,EAAlB,qCACpB,oCACEC,KAAK,SACLC,UAAS,iBAAYH,EAAa,WAAa,KAC3CC,K,sBCERG,IAASC,cAVc,CACrBC,OAAQC,0CACRC,WAAYD,qCACZE,YAAaF,yDACbG,UAAWH,qBACXI,cAAeJ,iCACfK,kBAAmBL,eACnBM,MAAON,8CAKT,IAAMO,EAAOV,IAASW,OAChBC,EAAWZ,IAASa,WCIbC,EAAcC,wBAAc,IAE5BC,EAAsB,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,SAAyC,EACrDC,qBADqD,mBACtEC,EADsE,KAChEC,EADgE,KAG7EC,qBAAU,WACR,IAAMC,EAAcZ,EAAKa,oBAAmB,SAACC,GAC3C,GAAIA,EAAU,CAAC,IACLC,EAA+BD,EAA/BC,YAAaC,EAAkBF,EAAlBE,SAAUC,EAAQH,EAARG,IAE/B,IAAKF,IAAgBC,EACnB,MAAM,IAAIE,MAAM,4CAGlBR,EAAQ,CACNS,GAAIF,EACJG,KAAML,EACNM,OAAQL,IAGZ,OAAO,kBAAMJ,UAEd,IAEH,IAAMU,EAAgB,uCAAG,sCAAAC,EAAA,6DACjBC,EAAW,IAAIlC,IAASW,KAAKwB,mBADZ,SAGFzB,EAAK0B,gBAAgBF,GAHnB,YAGjBG,EAHiB,QAIZlB,KAJY,qBAKkBkB,EAAOlB,KAAtCM,EALa,EAKbA,YAAaC,EALA,EAKAA,SAAUC,EALV,EAKUA,IAE1BF,GAAgBC,EAPA,sBAQb,IAAIE,MAAM,4CARG,OAWrBR,EAAQ,CACNS,GAAIF,EACJG,KAAML,EACNM,OAAQL,IAdW,2CAAH,qDAmBtB,OACE,cAACZ,EAAYwB,SAAb,CAAsBC,MAAO,CAAEpB,OAAMa,oBAArC,SACGf,KC/DMuB,EAAU,kBAAMC,qBAAW3B,ICW3B4B,G,MAAO,WAClB,IAAMC,EAAUC,cADQ,EAEWJ,IAA3BrB,EAFgB,EAEhBA,KAAMa,EAFU,EAEVA,iBAFU,EAIQd,mBAAS,IAJjB,mBAIjB2B,EAJiB,KAIPC,EAJO,KAMlBC,EAAgB,uCAAG,sBAAAd,EAAA,yDAClBd,EADkB,gCAEfa,IAFe,OAKvBW,EAAQK,KAAK,iBALU,2CAAH,qDAQhBC,EAAc,uCAAG,WAAOC,GAAP,eAAAjB,EAAA,yDACrBiB,EAAMC,iBAEkB,KAApBN,EAASO,OAHQ,iEAKCxC,EAASyC,IAAT,iBAAuBR,IAAYS,MALpC,WAKfC,EALe,QAMRC,SANQ,yCAQZC,MAAM,+BARM,WAWjBF,EAAQG,MAAMC,QAXG,0CAaZF,MAAM,yBAbM,QAgBrBd,EAAQK,KAAR,iBAAuBH,IAhBF,4CAAH,sDAmBpB,OACE,sBAAK9C,UAAU,YAAf,UACE,kCACE,qBACE6D,IAAKC,EACLC,IAAI,wDAEN,+DACA,yFAEF,+BACE,sBAAK/D,UAAU,eAAf,UACE,qBAAK6D,IAAKG,EAASD,IAAI,aACvB,yBACEhE,KAAK,SACLkE,QAASjB,EACThD,UAAU,cAHZ,UAKE,qBAAK6D,IAAKK,EAAeH,IAAI,mBAL/B,gCAQA,qBAAK/D,UAAU,YAAf,kCACA,uBAAMmE,SAAUjB,EAAhB,UACE,uBACEnD,KAAK,OACLqE,YAAY,6BACZC,SAAU,SAACC,GAAD,OAAOvB,EAAYuB,EAAEC,OAAO/B,QACtCA,MAAOM,IAET,cAAC,EAAD,CAAQ/C,KAAK,SAAb,yC,iBC5DCyE,G,MAAW,SAAC,GAAD,IACtBC,EADsB,EACtBA,QACAC,EAFsB,EAEtBA,OAFsB,IAGtBC,kBAHsB,aAItBC,qBAJsB,SAKtB1D,EALsB,EAKtBA,SALsB,OAOtB,sBACElB,UAAW6E,IACT,WACA,CAAEC,SAAUH,GACZ,CAAEI,YAAaH,IAAkBD,IAJrC,UAOE,4BAAIF,IACJ,mCACE,sBAAKzE,UAAU,YAAf,UACE,qBAAK6D,IAAKa,EAAO1C,OAAQ+B,IAAKW,EAAO3C,OACrC,+BAAO2C,EAAO3C,UAEhB,8BAAMb,YCpCG,MAA0B,iCCQ5B8D,G,MAAW,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,KAKzB,OACE,yBACElF,KAAK,SACLC,UAAU,YACViE,QAR4B,WAC9BiB,UAAUC,UAAUC,UAAUH,IAI9B,UAKE,8BACE,qBAAKpB,IAAKwB,EAAStB,IAAI,qBAEzB,0CAEGkB,UCaIK,EAAU,SAACC,GAAoB,IAClCnE,EAASqB,IAATrB,KADiC,EAEfD,mBAAS,IAFM,mBAElCqE,EAFkC,KAE3BC,EAF2B,OAGEtE,mBAAyB,IAH3B,mBAGlCuE,EAHkC,KAGlBC,EAHkB,KAgCzC,OA3BArE,qBAAU,WACR,IAAMkC,EAAU3C,EAASyC,IAAT,iBAAuBiC,IAqBvC,OAnBA/B,EAAQoC,GAAG,SAAS,SAACC,GAAU,IAAD,EACtBC,EAAkBC,OAAOC,QAAP,UACrBH,EAAKlC,MAAMsC,iBADU,QACyB,IAC/CC,KAAI,yCAAEC,EAAF,KAAO3D,EAAP,WAAmB,CACvBV,GAAIqE,EACJ1B,QAASjC,EAAMiC,QACfC,OAAQlC,EAAMkC,OACdE,cAAepC,EAAMoC,cACrBD,WAAYnC,EAAMmC,WAClByB,UAAWL,OAAOM,OAAP,UAAc7D,EAAM8D,aAApB,QAA6B,IAAIC,OAC5CC,OAAM,UAAET,OAAOC,QAAP,UAAexD,EAAM8D,aAArB,QAA8B,IAAIG,MACxC,uCAAmBC,YAAL,OAAkBtF,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAMU,cADlC,aAAE,EAEJ,OAGN2D,EAASI,EAAKlC,MAAM6B,OACpBG,EAAiBG,MAGZ,WACLtC,EAAQmD,IAAI,YAEb,CAACpB,EAAD,OAASnE,QAAT,IAASA,OAAT,EAASA,EAAMU,KAEX,CAAE4D,iBAAgBF,UCjDdoB,G,MAAO,WAAO,IAAD,EACWnE,IAA3BrB,EADgB,EAChBA,KAAMa,EADU,EACVA,iBADU,EAEgBd,mBAAS,IAFzB,mBAEjB0F,EAFiB,KAEHC,EAFG,KAIlBC,EAASC,cAJS,EAKU1B,EAAQyB,EAAOjF,IAAzC0D,EALgB,EAKhBA,MAAOE,EALS,EAKTA,eAETuB,EAAkB,uCAAG,WAAO9D,GAAP,eAAAjB,EAAA,yDACzBiB,EAAMC,iBAEsB,KAAxByD,EAAaxD,OAHQ,oDAIpBjC,EAJoB,sBAIR,IAAIS,MAAM,0BAJF,cAMnBqF,EAAW,CACfzC,QAASoC,EACTnC,OAAQ,CACN3C,KAAI,OAAEX,QAAF,IAAEA,OAAF,EAAEA,EAAMW,KACZC,OAAM,OAAEZ,QAAF,IAAEA,OAAF,EAAEA,EAAMY,QAEhB4C,eAAe,EACfD,YAAY,GAbW,SAgBnB9D,EAASyC,IAAT,iBAAuByD,EAAOjF,GAA9B,eAA8CmB,KAAKiE,GAhBhC,OAiBzBJ,EAAgB,IAjBS,2CAAH,sDAoBlBK,EAAkB,uCAAG,WACzBC,EACAZ,GAFyB,SAAAtE,EAAA,0DAIrBsE,EAJqB,gCAKjB3F,EAASyC,IAAT,iBACMyD,EAAOjF,GADb,sBAC6BsF,EAD7B,kBACiDZ,IACrDa,SAPqB,6CASjBxG,EAASyC,IAAT,iBACMyD,EAAOjF,GADb,sBAC6BsF,EAD7B,WAEJnE,KAAK,CACLyD,SAAQ,OAAEtF,QAAF,IAAEA,OAAF,EAAEA,EAAMU,KAZK,2CAAH,wDAiBxB,OACE,sBAAK9B,UAAU,YAAf,UACE,iCACE,sBAAKA,UAAU,UAAf,UACE,cAAC,IAAD,CAAMsH,GAAG,IAAT,SACE,qBAAKzD,IAAKG,EAASD,IAAI,oBAEzB,cAAC,EAAD,CAAUkB,KAAM8B,EAAOjF,UAI3B,iCACE,sBAAK9B,UAAU,aAAf,UACE,sCAEGwF,KAEFE,EAAea,OAAS,GACvB,iCACGb,EAAea,OADlB,wBAOJ,uBAAMpC,SAAU8C,EAAhB,UACE,0BACE7C,YAAY,gCACZC,SAAU,SAACC,GAAD,OAAOwC,EAAgBxC,EAAEC,OAAO/B,QAC1CA,MAAOqE,IAET,sBAAK7G,UAAU,cAAf,UACGoB,EACC,sBAAKpB,UAAU,YAAf,UACE,qBAAK6D,IAAKzC,EAAKY,OAAQ+B,IAAK3C,EAAKW,OACjC,+BAAOX,EAAKW,UAGd,kEAEE,wBAAQhC,KAAK,SAASkE,QAAShC,EAA/B,oCAMJ,cAAC,EAAD,CAAQlC,KAAK,SAASwH,UAAWnG,EAAjC,mCAMJ,qBAAKpB,UAAU,gBAAf,SACG0F,EAAeQ,KAAI,SAACgB,GAAD,OAClB,cAAC,EAAD,CAEEzC,QAASyC,EAASzC,QAClBC,OAAQwC,EAASxC,OACjBC,WAAYuC,EAASvC,WACrBC,cAAesC,EAAStC,cAL1B,UAOIsC,EAASvC,YACT,yBACE3E,UAAS,sBAAiBkH,EAASV,OAAS,QAAU,IACtDzG,KAAK,SACLyH,aAAW,qBACXvD,QAAS,kBAAMkD,EAAmBD,EAASpF,GAAIoF,EAASV,SAJ1D,UAMGU,EAASd,UAAY,GAAK,+BAAOc,EAASd,YAC3C,qBACEqB,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,6BALR,SAOE,sBACEC,EAAE,kiBACFC,OAAO,UACPC,YAAY,MACZC,cAAc,QACdC,eAAe,gBA1BlBhB,EAASpF,iBCvHb,MAA0B,mCCA1B,MAA0B,kCCA1B,MAA0B,mCCoB5BqG,G,MAAY,WACvB,IAAMvF,EAAUC,cACVkE,EAASC,cAFc,EAGK1B,EAAQyB,EAAOjF,IAAzC0D,EAHqB,EAGrBA,MAAOE,EAHc,EAGdA,eAET0C,EAAa,uCAAG,sBAAAlG,EAAA,0DAEhBmG,OAAOC,QAAQ,8CAFC,gCAGZzH,EAASyC,IAAT,iBAAuByD,EAAOjF,KAAMyG,OAAO,CAC/C3E,QAAS,IAAI4E,OAJG,OAOlB5F,EAAQK,KAAK,KAPK,2CAAH,qDAWbwF,EAAoB,uCAAG,WAAOrB,GAAP,SAAAlF,EAAA,0DAEvBmG,OAAOC,QAAQ,iDAFQ,gCAGnBzH,EAASyC,IAAT,iBACMyD,EAAOjF,GADb,sBAC6BsF,IACjCC,SALuB,2CAAH,sDASpBqB,EAA6B,uCAAG,WAAOtB,GAAP,SAAAlF,EAAA,sEAC9BrB,EAASyC,IAAT,iBAAuByD,EAAOjF,GAA9B,sBAA8CsF,IAAcmB,OAAO,CACvE5D,YAAY,IAFsB,2CAAH,sDAM7BgE,EAAuB,uCAAG,WAAOvB,GAAP,SAAAlF,EAAA,sEACxBrB,EAASyC,IAAT,iBAAuByD,EAAOjF,GAA9B,sBAA8CsF,IAAcmB,OAAO,CACvE3D,eAAe,IAFa,2CAAH,sDAM7B,OACE,sBAAK5E,UAAU,YAAf,UACE,iCACE,sBAAKA,UAAU,UAAf,UACE,cAAC,IAAD,CAAMsH,GAAG,IAAT,SACE,qBAAKzD,IAAKG,EAASD,IAAI,oBAEzB,gCACE,cAAC,EAAD,CAAUkB,KAAM8B,EAAOjF,KACvB,cAAC,EAAD,CAAQjC,YAAU,EAACoE,QAASmE,EAA5B,mCAON,iCACE,sBAAKpI,UAAU,aAAf,UACE,sCAEGwF,KAEFE,EAAea,OAAS,GACvB,iCACGb,EAAea,OADlB,wBAOJ,qBAAKvG,UAAU,gBAAf,SACG0F,EAAeQ,KAAI,SAACgB,GAAD,OAClB,eAAC,EAAD,CAEEzC,QAASyC,EAASzC,QAClBC,OAAQwC,EAASxC,OACjBC,WAAYuC,EAASvC,WACrBC,cAAesC,EAAStC,cAL1B,WAOIsC,EAASvC,YACT,qCACE,wBACE5E,KAAK,SACLkE,QAAS,kBAAMyE,EAA8BxB,EAASpF,KAFxD,SAIE,qBAAK+B,IAAK+E,EAAU7E,IAAI,sCAG1B,wBACEhE,KAAK,SACLkE,QAAS,kBAAM0E,EAAwBzB,EAASpF,KAFlD,SAIE,qBAAK+B,IAAKgF,EAAW9E,IAAI,iCAK/B,wBACEhE,KAAK,SACLkE,QAAS,kBAAMwE,EAAqBvB,EAASpF,KAF/C,SAIE,qBAAK+B,IAAKiF,EAAW/E,IAAI,yBA5BtBmD,EAASpF,iBC9EfiH,G,MAAa,WAAO,IACvB3H,EAASqB,IAATrB,KADsB,EAEMD,mBAAS,IAFf,mBAEvB6H,EAFuB,KAEXC,EAFW,KAIxBrG,EAAUC,cAEVG,EAAgB,uCAAG,WAAOG,GAAP,iBAAAjB,EAAA,yDACvBiB,EAAMC,iBAEoB,KAAtB4F,EAAW3F,OAHQ,wDAKjBG,EAAU3C,EAASyC,IAAI,SALN,SAMIE,EAAQP,KAAK,CACtCuC,MAAOwD,EACPtC,SAAQ,OAAEtF,QAAF,IAAEA,OAAF,EAAEA,EAAMU,KARK,OAMjBoH,EANiB,OAWvBtG,EAAQK,KAAR,uBAA6BiG,EAAa/C,MAXnB,2CAAH,sDActB,OACE,sBAAKnG,UAAU,YAAf,UACE,kCACE,qBACE6D,IAAKC,EACLC,IAAI,wDAEN,+DACA,yFAEF,+BACE,sBAAK/D,UAAU,eAAf,UACE,qBAAK6D,IAAKG,EAASD,IAAI,aACvB,qDACA,uBAAMI,SAAUnB,EAAhB,UACE,uBACEjD,KAAK,OACLqE,YAAY,eACZC,SAAU,SAACC,GAAD,OAAO2E,EAAc3E,EAAEC,OAAO/B,QACxCA,MAAOwG,IAET,cAAC,EAAD,CAAQjJ,KAAK,SAAb,2BAEF,mEAEE,cAAC,IAAD,CAAMuH,GAAG,IAAT,sCClCG6B,G,MAbH,kBACV,cAAC,IAAD,UACE,cAAC,EAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAW3G,IACjC,cAAC,IAAD,CAAOyG,KAAK,gBAAgBE,UAAWP,IACvC,cAAC,IAAD,CAAOK,KAAK,aAAaE,UAAW1C,IACpC,cAAC,IAAD,CAAOwC,KAAK,mBAAmBE,UAAWnB,aCXlDoB,IAASC,OACP,cAAC,aAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1f1b18fa.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.a88331cb.svg\";","export default __webpack_public_path__ + \"static/media/google-icon.df15d8e5.svg\";","export default __webpack_public_path__ + \"static/media/illustration.ae7276f0.svg\";","import { ButtonHTMLAttributes } from 'react';\n\nimport './styles.scss';\n\ntype ButtonProps = ButtonHTMLAttributes<HTMLButtonElement> & {\n  isOutlined?: boolean;\n};\n\nexport const Button = ({ isOutlined, ...props }: ButtonProps) => (\n  <button\n    type=\"button\"\n    className={`button ${isOutlined ? 'outlined' : ''}`}\n    {...props}\n  />\n);\n","import 'firebase/auth';\nimport 'firebase/database';\nimport firebase from 'firebase/app';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nconst Auth = firebase.auth();\nconst Database = firebase.database();\n\nexport { firebase, Auth, Database };\n","import {\n  createContext, ReactNode, useEffect, useState,\n} from 'react';\n\nimport { firebase, Auth } from '../../services/Firebase';\n\ntype User = {\n  id: string;\n  name: string;\n  avatar: string;\n};\n\ntype AuthContextType = {\n  user: User | undefined;\n  signInWithGoogle: () => Promise<void>;\n};\n\ntype AuthContextProviderProps = {\n  children: ReactNode;\n};\n\nexport const AuthContext = createContext({} as AuthContextType);\n\nexport const AuthContextProvider = ({ children }: AuthContextProviderProps) => {\n  const [user, setUser] = useState<User>();\n\n  useEffect(() => {\n    const unsubscribe = Auth.onAuthStateChanged((authUser) => {\n      if (authUser) {\n        const { displayName, photoURL, uid } = authUser;\n\n        if (!displayName || !photoURL) {\n          throw new Error('Missing information from Google Account!');\n        }\n\n        setUser({\n          id: uid,\n          name: displayName,\n          avatar: photoURL,\n        });\n      }\n      return () => unsubscribe();\n    });\n  }, []);\n\n  const signInWithGoogle = async () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n\n    const result = await Auth.signInWithPopup(provider);\n    if (result.user) {\n      const { displayName, photoURL, uid } = result.user;\n\n      if (!displayName || !photoURL) {\n        throw new Error('Missing information from Google Account!');\n      }\n\n      setUser({\n        id: uid,\n        name: displayName,\n        avatar: photoURL,\n      });\n    }\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, signInWithGoogle }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n","import { useContext } from 'react';\nimport { AuthContext } from '../../contexts/AuthContext';\n\nexport const useAuth = () => useContext(AuthContext);\n","import { FormEvent, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport logoImg from '../../assets/images/logo.svg';\nimport googleIconImg from '../../assets/images/google-icon.svg';\nimport illustrationImg from '../../assets/images/illustration.svg';\n\nimport { Button } from '../../components/Button';\nimport { useAuth } from '../../hooks/useAuth';\n\nimport { Database } from '../../services/Firebase';\n\nimport './styles.scss';\n\nexport const Home = () => {\n  const history = useHistory();\n  const { user, signInWithGoogle } = useAuth();\n\n  const [roomCode, setRoomCode] = useState('');\n\n  const handleCreateRoom = async () => {\n    if (!user) {\n      await signInWithGoogle();\n    }\n\n    history.push('/rooms/create');\n  };\n\n  const handleJoinRoom = async (event: FormEvent) => {\n    event.preventDefault();\n    // eslint-disable-next-line\n    if (roomCode.trim() === '') return;\n\n    const roomRef = await Database.ref(`/rooms/${roomCode}`).get();\n    if (!roomRef.exists()) {\n      // eslint-disable-next-line\n      return alert('This room does not exists.');\n    }\n\n    if (roomRef.val().endedAt) {\n      // eslint-disable-next-line\n      return alert('Room already closed.');\n    }\n\n    history.push(`/rooms/${roomCode}`);\n  };\n\n  return (\n    <div className=\"page-auth\">\n      <aside>\n        <img\n          src={illustrationImg}\n          alt=\"Ilustração simbolizando perguntas e respostas\"\n        />\n        <strong>Crie salas de Q&amp;A ao-vivo</strong>\n        <p>Tire as dúvidas da sua audiência em tempo real.</p>\n      </aside>\n      <main>\n        <div className=\"main-content\">\n          <img src={logoImg} alt=\"Letmeask\" />\n          <button\n            type=\"button\"\n            onClick={handleCreateRoom}\n            className=\"create-room\"\n          >\n            <img src={googleIconImg} alt=\"Logo do google\" />\n            Crie sua sala com o google\n          </button>\n          <div className=\"separator\">Ou entre em uma sala</div>\n          <form onSubmit={handleJoinRoom}>\n            <input\n              type=\"text\"\n              placeholder=\"Digite o código da sala\"\n              onChange={(e) => setRoomCode(e.target.value)}\n              value={roomCode}\n            />\n            <Button type=\"submit\">Entrar na sala</Button>\n          </form>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { ReactNode } from 'react';\nimport cx from 'classnames';\n\nimport './styles.scss';\n\ntype QuestionProps = {\n  content: string;\n  author: {\n    name: string;\n    avatar: string;\n  };\n  children?: ReactNode;\n  isAnswered?: boolean;\n  isHighlighted?: boolean;\n};\n\nexport const Question = ({\n  content,\n  author,\n  isAnswered = false,\n  isHighlighted = false,\n  children,\n}: QuestionProps) => (\n  <div\n    className={cx(\n      'question',\n      { answered: isAnswered },\n      { highlighted: isHighlighted && !isAnswered },\n    )}\n  >\n    <p>{content}</p>\n    <footer>\n      <div className=\"user-info\">\n        <img src={author.avatar} alt={author.name} />\n        <span>{author.name}</span>\n      </div>\n      <div>{children}</div>\n    </footer>\n  </div>\n);\n","export default __webpack_public_path__ + \"static/media/copy.2f36f99e.svg\";","import copyImg from '../../assets/images/copy.svg';\n\nimport './styles.scss';\n\ntype RoomCodeProps = {\n  code: string;\n};\n\nexport const RoomCode = ({ code }: RoomCodeProps) => {\n  const copyRoomCodeToClipboard = () => {\n    navigator.clipboard.writeText(code);\n  };\n\n  return (\n    <button\n      type=\"button\"\n      className=\"room-code\"\n      onClick={copyRoomCodeToClipboard}\n    >\n      <div>\n        <img src={copyImg} alt=\"Copy room code\" />\n      </div>\n      <span>\n        Sala #\n        {code}\n      </span>\n    </button>\n  );\n};\n","import { useEffect, useState } from 'react';\n\nimport { useAuth } from '../useAuth';\nimport { Database } from '../../services/Firebase';\n\ntype FirebaseQuestions = Record<\n  string,\n  {\n    author: {\n      name: string;\n      avatar: string;\n    };\n    content: string;\n    isAnswered: boolean;\n    isHighlighted: boolean;\n    likes: Record<\n      string,\n      {\n        authorId: string;\n      }\n    >;\n  }\n>;\n\ntype QuestionType = {\n  id: string;\n  author: {\n    name: string;\n    avatar: string;\n  };\n  content: string;\n  isAnswered: boolean;\n  isHighlighted: boolean;\n  likeCount: number;\n  likeId: string | undefined;\n};\n\nexport const useRoom = (roomId: string) => {\n  const { user } = useAuth();\n  const [title, setTitle] = useState('');\n  const [usersQuestions, setUsersQuestion] = useState<QuestionType[]>([]);\n\n  useEffect(() => {\n    const roomRef = Database.ref(`/rooms/${roomId}`);\n\n    roomRef.on('value', (room) => {\n      const parsedQuestions = Object.entries(\n        (room.val().questions as FirebaseQuestions) ?? {},\n      ).map(([key, value]) => ({\n        id: key,\n        content: value.content,\n        author: value.author,\n        isHighlighted: value.isHighlighted,\n        isAnswered: value.isAnswered,\n        likeCount: Object.values(value.likes ?? {}).length,\n        likeId: Object.entries(value.likes ?? {}).find(\n          ([, like]) => like.authorId === user?.id,\n        )?.[0],\n      }));\n\n      setTitle(room.val().title);\n      setUsersQuestion(parsedQuestions);\n    });\n\n    return () => {\n      roomRef.off('value');\n    };\n  }, [roomId, user?.id]);\n\n  return { usersQuestions, title };\n};\n","import { FormEvent, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\n\nimport logoImg from '../../assets/images/logo.svg';\n\nimport { Button } from '../../components/Button';\nimport { Question } from '../../components/Question';\nimport { RoomCode } from '../../components/RoomCode';\n\nimport { useAuth } from '../../hooks/useAuth';\nimport { useRoom } from '../../hooks/useRoom';\n\nimport { Database } from '../../services/Firebase';\n\nimport './styles.scss';\n\ntype RoomParams = {\n  id: string;\n};\n\nexport const Room = () => {\n  const { user, signInWithGoogle } = useAuth();\n  const [sendQuestion, setSendQuestion] = useState('');\n\n  const params = useParams<RoomParams>();\n  const { title, usersQuestions } = useRoom(params.id);\n\n  const handleSendQuestion = async (event: FormEvent) => {\n    event.preventDefault();\n    // eslint-disable-next-line\n    if (sendQuestion.trim() === '') return;\n    if (!user) throw new Error('You must be logged in.');\n\n    const question = {\n      content: sendQuestion,\n      author: {\n        name: user?.name,\n        avatar: user?.avatar,\n      },\n      isHighlighted: false,\n      isAnswered: false,\n    };\n\n    await Database.ref(`/rooms/${params.id}/questions`).push(question);\n    setSendQuestion('');\n  };\n\n  const handleLikeQuestion = async (\n    questionId: string,\n    likeId: string | undefined,\n  ) => {\n    if (likeId) {\n      await Database.ref(\n        `/rooms/${params.id}/questions/${questionId}/likes/${likeId}`,\n      ).remove();\n    } else {\n      await Database.ref(\n        `/rooms/${params.id}/questions/${questionId}/likes`,\n      ).push({\n        authorId: user?.id,\n      });\n    }\n  };\n\n  return (\n    <div className=\"page-room\">\n      <header>\n        <div className=\"content\">\n          <Link to=\"/\">\n            <img src={logoImg} alt=\"Letmeask logo\" />\n          </Link>\n          <RoomCode code={params.id} />\n        </div>\n      </header>\n\n      <main>\n        <div className=\"room-title\">\n          <h1>\n            Sala\n            {title}\n          </h1>\n          {usersQuestions.length > 0 && (\n            <span>\n              {usersQuestions.length}\n              &nbsp;pergunta(s)\n            </span>\n          )}\n        </div>\n\n        <form onSubmit={handleSendQuestion}>\n          <textarea\n            placeholder=\"O que você quer perguntar?\"\n            onChange={(e) => setSendQuestion(e.target.value)}\n            value={sendQuestion}\n          />\n          <div className=\"form-footer\">\n            {user ? (\n              <div className=\"user-info\">\n                <img src={user.avatar} alt={user.name} />\n                <span>{user.name}</span>\n              </div>\n            ) : (\n              <span>\n                Para enviar uma perguntar,&nbsp;\n                <button type=\"button\" onClick={signInWithGoogle}>\n                  faça o seu login\n                </button>\n              </span>\n            )}\n\n            <Button type=\"submit\" disabled={!user}>\n              Enviar pergunta\n            </Button>\n          </div>\n        </form>\n\n        <div className=\"question-list\">\n          {usersQuestions.map((question) => (\n            <Question\n              key={question.id}\n              content={question.content}\n              author={question.author}\n              isAnswered={question.isAnswered}\n              isHighlighted={question.isHighlighted}\n            >\n              {!question.isAnswered && (\n                <button\n                  className={`like-button ${question.likeId ? 'liked' : ''}`}\n                  type=\"button\"\n                  aria-label=\"Marcar como gostei\"\n                  onClick={() => handleLikeQuestion(question.id, question.likeId)}\n                >\n                  {question.likeCount > 0 && <span>{question.likeCount}</span>}\n                  <svg\n                    width=\"24\"\n                    height=\"24\"\n                    viewBox=\"0 0 24 24\"\n                    fill=\"none\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                  >\n                    <path\n                      d=\"M7 22H4C3.46957 22 2.96086 21.7893 2.58579 21.4142C2.21071 21.0391 2 20.5304 2 20V13C2 12.4696 2.21071 11.9609 2.58579 11.5858C2.96086 11.2107 3.46957 11 4 11H7M14 9V5C14 4.20435 13.6839 3.44129 13.1213 2.87868C12.5587 2.31607 11.7956 2 11 2L7 11V22H18.28C18.7623 22.0055 19.2304 21.8364 19.5979 21.524C19.9654 21.2116 20.2077 20.7769 20.28 20.3L21.66 11.3C21.7035 11.0134 21.6842 10.7207 21.6033 10.4423C21.5225 10.1638 21.3821 9.90629 21.1919 9.68751C21.0016 9.46873 20.7661 9.29393 20.5016 9.17522C20.2371 9.0565 19.9499 8.99672 19.66 9H14Z\"\n                      stroke=\"#737380\"\n                      strokeWidth=\"1.5\"\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                    />\n                  </svg>\n                </button>\n              )}\n            </Question>\n          ))}\n        </div>\n      </main>\n    </div>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/delete.22ba6e00.svg\";","export default __webpack_public_path__ + \"static/media/check.5dfa6ed6.svg\";","export default __webpack_public_path__ + \"static/media/answer.4502a8d5.svg\";","import { Link, useHistory, useParams } from 'react-router-dom';\n\nimport logoImg from '../../assets/images/logo.svg';\nimport deleteImg from '../../assets/images/delete.svg';\nimport checkImg from '../../assets/images/check.svg';\nimport answerImg from '../../assets/images/answer.svg';\n\nimport { Button } from '../../components/Button';\nimport { Question } from '../../components/Question';\nimport { RoomCode } from '../../components/RoomCode';\n\nimport { useRoom } from '../../hooks/useRoom';\nimport { Database } from '../../services/Firebase';\n\nimport './styles.scss';\n\ntype RoomParams = {\n  id: string;\n};\n\nexport const AdminRoom = () => {\n  const history = useHistory();\n  const params = useParams<RoomParams>();\n  const { title, usersQuestions } = useRoom(params.id);\n\n  const handleEndRoom = async () => {\n    // eslint-disable-next-line\n    if (window.confirm('Tem certeza que deseja encerrar essa sala?')) {\n      await Database.ref(`/rooms/${params.id}`).update({\n        endedAt: new Date(),\n      });\n\n      history.push('/');\n    }\n  };\n\n  const handleDeleteQuestion = async (questionId: string) => {\n    // eslint-disable-next-line\n    if (window.confirm('Tem certeza que deseja excluir essa pergunta?')) {\n      await Database.ref(\n        `/rooms/${params.id}/questions/${questionId}`,\n      ).remove();\n    }\n  };\n\n  const handleCheckQuestionAsAnswered = async (questionId: string) => {\n    await Database.ref(`/rooms/${params.id}/questions/${questionId}`).update({\n      isAnswered: true,\n    });\n  };\n\n  const handleHighlightQuestion = async (questionId: string) => {\n    await Database.ref(`/rooms/${params.id}/questions/${questionId}`).update({\n      isHighlighted: true,\n    });\n  };\n\n  return (\n    <div className=\"page-room\">\n      <header>\n        <div className=\"content\">\n          <Link to=\"/\">\n            <img src={logoImg} alt=\"Letmeask logo\" />\n          </Link>\n          <div>\n            <RoomCode code={params.id} />\n            <Button isOutlined onClick={handleEndRoom}>\n              Encerrar sala\n            </Button>\n          </div>\n        </div>\n      </header>\n\n      <main>\n        <div className=\"room-title\">\n          <h1>\n            Sala\n            {title}\n          </h1>\n          {usersQuestions.length > 0 && (\n            <span>\n              {usersQuestions.length}\n              &nbsp;pergunta(s)\n            </span>\n          )}\n        </div>\n\n        <div className=\"question-list\">\n          {usersQuestions.map((question) => (\n            <Question\n              key={question.id}\n              content={question.content}\n              author={question.author}\n              isAnswered={question.isAnswered}\n              isHighlighted={question.isHighlighted}\n            >\n              {!question.isAnswered && (\n                <>\n                  <button\n                    type=\"button\"\n                    onClick={() => handleCheckQuestionAsAnswered(question.id)}\n                  >\n                    <img src={checkImg} alt=\"Marcar pergunta como respondida\" />\n                  </button>\n\n                  <button\n                    type=\"button\"\n                    onClick={() => handleHighlightQuestion(question.id)}\n                  >\n                    <img src={answerImg} alt=\"Dar destaque a pergunta\" />\n                  </button>\n                </>\n              )}\n\n              <button\n                type=\"button\"\n                onClick={() => handleDeleteQuestion(question.id)}\n              >\n                <img src={deleteImg} alt=\"Remover pergunta\" />\n              </button>\n            </Question>\n          ))}\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { Link, useHistory } from 'react-router-dom';\nimport { FormEvent, useState } from 'react';\n\nimport logoImg from '../../assets/images/logo.svg';\nimport illustrationImg from '../../assets/images/illustration.svg';\n\nimport { Button } from '../../components/Button';\nimport { useAuth } from '../../hooks/useAuth';\nimport { Database } from '../../services/Firebase';\n\nimport './styles.scss';\n\nexport const CreateRoom = () => {\n  const { user } = useAuth();\n  const [createRoom, setCreateRoom] = useState('');\n\n  const history = useHistory();\n\n  const handleCreateRoom = async (event: FormEvent) => {\n    event.preventDefault();\n    // eslint-disable-next-line\n    if (createRoom.trim() === '') return;\n\n    const roomRef = Database.ref('rooms');\n    const firebaseRoom = await roomRef.push({\n      title: createRoom,\n      authorId: user?.id,\n    });\n\n    history.push(`/admin/rooms/${firebaseRoom.key}`);\n  };\n\n  return (\n    <div className=\"page-auth\">\n      <aside>\n        <img\n          src={illustrationImg}\n          alt=\"Ilustração simbolizando perguntas e respostas\"\n        />\n        <strong>Crie salas de Q&amp;A ao-vivo</strong>\n        <p>Tire as dúvidas da sua audiência em tempo real.</p>\n      </aside>\n      <main>\n        <div className=\"main-content\">\n          <img src={logoImg} alt=\"Letmeask\" />\n          <h2>Criar uma nova sala</h2>\n          <form onSubmit={handleCreateRoom}>\n            <input\n              type=\"text\"\n              placeholder=\"Nome da sala\"\n              onChange={(e) => setCreateRoom(e.target.value)}\n              value={createRoom}\n            />\n            <Button type=\"submit\">Criar sala</Button>\n          </form>\n          <p>\n            Quer entrar em uma sala existente?\n            <Link to=\"/\">clique aqui</Link>\n          </p>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { Route, BrowserRouter, Switch } from 'react-router-dom';\n\nimport { Home } from '../pages/Home';\nimport { Room } from '../pages/Room';\nimport { AdminRoom } from '../pages/AdminRoom';\nimport { CreateRoom } from '../pages/CreateRoom';\nimport { AuthContextProvider } from '../contexts/AuthContext';\n\nimport './styles.scss';\n\nconst App = () => (\n  <BrowserRouter>\n    <AuthContextProvider>\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/rooms/create\" component={CreateRoom} />\n        <Route path=\"/rooms/:id\" component={Room} />\n        <Route path=\"/admin/rooms/:id\" component={AdminRoom} />\n      </Switch>\n    </AuthContextProvider>\n  </BrowserRouter>\n);\n\nexport default App;\n","import { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './services/Firebase';\n\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}